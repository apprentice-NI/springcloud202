server:
  port: 8001

spring:
  application:
    name: cloud-payment-service

  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-calss-name: org.gjt.mm.mysql.Driver
    url: jdbc:mysql://localhost:3306/cloud2022?useUnicode=true&characterEncoding=UTF-8
    username: root
    password: root

eureka:
  client:
  #表示将自己注册进EurekaServer
    register-with-eureka: true
    #是否从EurekaServer中抓取已有的注册信息，默认为true，单节点无所谓，集群必须设定为true，才能配合ribbon使用负载均衡
    fetch-registry: true
    service-url:
      #defaultZone: http://localhost:7001/eureka #eureka server是单机的配置方式
      defaultZone: http://eureka7001.com:7001/eureka
#      ,http://eureka7002.com:7002/eureka #payment8001这个微服务作为eureka client需要注册到eureka server集群中的两个微服务中
  instance:
      instance-id: payment8001
      prefer-ip-address: true
      #Eureka客户端向服务端发送心跳的时间间隔，默认为30s
      #关闭eureka自我保护相关
#      lease-renewal-interval-in-seconds: 1
      #Eureka服务端在收到最后一次心跳后等待的时间上线，默认为90s
#      lease-expiration-duration-in-seconds: 2

mybatis:
# 这里的classpath代表当前application.yml文件所在的路径也就是resources目录
  mapperLocations: classpath:mapper/*.xml
  type-aliases-package: com.guigu.springcloud.dataobjects # 所有dataObject别名类所在的包

# 与 application.properties功能一样，都是起到配置的作用